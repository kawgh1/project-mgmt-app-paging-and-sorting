
# Development
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driverClassName=org.postgresql.Driver

###################################################################
# PRODUCTION / DEPLOYMENT on Heroku using Postgres
###################################################################


# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
# tells database to ignore hibernate settings (esp for hibernate sequences) and use database settings
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

#spring.datasource.url=jdbc:mysql://localhost:3306/projectmgmtapp
#heroku vars jdbc:postgresql://<Host>:<Port>/<Database>
spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.url=${jdbcurl}
spring.datasource.username=${SPRING_DATASOURCE_USER}
#spring.datasource.username=${dbuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#spring.datasource.password=${dbpassword}

# 'never' means Spring will ignore any .sql or .schema files in the project
# ideally developers will never run .sql files in production, that is the DBA's job
spring.datasource.initialization-mode=never 

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#
#spring.jpa.properties.hibernate.jdbc.loc.non_contextual_creation=true
# thymeleaf cache=false refreshes the cache every reload, great for dev, MUST be set true (default) for production
spring.thymeleaf.cache=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect

# this is so maven can build the jar file without requiring an explicit database url
# since we are deploying this to an ubuntu server
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#spring.jpa.properties.javax.persistence.validation.mode=none



version=1.0.1
#version=${envVersionNumber}


###################################################################
# TEST PRODUCTION / DEPLOYMENT on AWS Ubuntu Server with Postresql
# http://ec2-18-217-99-136.us-east-2.compute.amazonaws.com:8080/
###################################################################